DataTypesExpression.txt

Data Types in Java
Data types define what kind of data a variable can store. Java has two main categories of data types:

1️⃣ Primitive Data Types (Built-in)
These store simple values directly in memory.

Data Type	    Size	        Example
byte	        1 byte	        byte b = 100;
short	        2 bytes	        short s = 32000;
int	            4 bytes	        int num = 100000;
long	        8 bytes	        long bigNum = 123456789L;
float	        4 bytes	        float pi = 3.14f;
double	        8 bytes	        double d = 3.14159265359;
char	        2 bytes	        char letter = 'A';
boolean	        1 bit	        boolean isJavaFun = true;
✅ Example: Using Primitive Data Types
public class DataTypesExample {
    public static void main(String[] args) {
        int age = 25;
        float height = 5.9f;
        char grade = 'A';
        boolean isPassed = true;

        System.out.println("Age: " + age);
        System.out.println("Height: " + height);
        System.out.println("Grade: " + grade);
        System.out.println("Passed: " + isPassed);
    }
}


Non-Primitive Data Types (Reference Types)
These store references to objects rather than actual values.

Data Type	Example
String	String name = "Java";
Arrays	int[] numbers = {1, 2, 3};
Classes	MyClass obj = new MyClass();
✅ Example: Using Non-Primitive Data Types
public class NonPrimitiveExample {
    public static void main(String[] args) {
        String message = "Hello, Java!";
        int[] numbers = {10, 20, 30};

        System.out.println("Message: " + message);
        System.out.println("First Number: " + numbers[0]);
    }
}


Expressions in Java
An expression is a combination of variables, operators, and values that Java evaluates to produce a single result.

✅ Example of Simple Expressions
int a = 10;
int b = 5;
int sum = a + b;  // Expression: 10 + 5 = 15
int product = a * b; // Expression: 10 * 5 = 50
Types of Expressions:
1️⃣ Arithmetic Expressions (Mathematical calculations)
int x = 10 + 5 * 2; // Multiplication first, then addition
2️⃣ Relational Expressions (Comparison, returns true or false)
boolean result = (10 > 5); // true
3️⃣ Logical Expressions (AND, OR, NOT operations)
boolean isAdult = (age >= 18) && (height > 5.5);
4️⃣ Assignment Expressions (Assigning values to variables)
int num = 10;
num += 5; // Equivalent to num = num + 5;