Booleans in Java
In Java, booleans are used to represent true or false values. They are commonly used in conditional statements, loops, and logical operations.

1️⃣ Declaring a Boolean Variable
The boolean data type in Java only holds two values:

true
false
✅ Example:
public class BooleanExample {
    public static void main(String[] args) {
        boolean isJavaFun = true;
        boolean isFishTasty = false;

        System.out.println("Is Java fun? " + isJavaFun);
        System.out.println("Is fish tasty? " + isFishTasty);
    }
}
Output:
Is Java fun? true
Is fish tasty? false


2️⃣ Boolean in Conditional Statements
Booleans are commonly used in if-else conditions.

✅ Example:
public class BooleanCondition {
    public static void main(String[] args) {
        int age = 20;
        boolean isAdult = (age >= 18);

        if (isAdult) {
            System.out.println("You are an adult.");
        } else {
            System.out.println("You are a minor.");
        }
    }
}
Output:
You are an adult.


3️⃣ Boolean Operators
Java supports logical operators that return boolean values:

Operator	Name	Example	Result
&&	AND	true && false	false
`		`	OR
!	NOT	!true	false
✅ Example:
public class BooleanOperators {
    public static void main(String[] args) {
        boolean a = true;
        boolean b = false;

        System.out.println("a && b: " + (a && b));  // false
        System.out.println("a || b: " + (a || b));  // true
        System.out.println("!a: " + (!a));          // false
    }
}
Output:
a && b: false
a || b: true
!a: false



4️⃣ Boolean in Comparisons
Comparison operators return boolean values:

Operator	Description	Example	Result
==	Equal to	5 == 5	true
!=	Not equal to	5 != 3	true
>	Greater than	10 > 5	true
<	Less than	2 < 8	true
>=	Greater than or equal to	7 >= 7	true
<=	Less than or equal to	3 <= 5	true
✅ Example:
public class BooleanComparison {
    public static void main(String[] args) {
        int x = 10;
        int y = 20;

        System.out.println("x == y: " + (x == y));
        System.out.println("x != y: " + (x != y));
        System.out.println("x > y: " + (x > y));
        System.out.println("x < y: " + (x < y));
    }
}
Output:
x == y: false
x != y: true
x > y: false
x < y: true



5️⃣ Boolean in Loops
Boolean expressions are often used in loops.

✅ Example:
public class BooleanLoop {
    public static void main(String[] args) {
        int count = 1;
        boolean condition = true;

        while (condition) {
            System.out.println("Count: " + count);
            if (count == 5) {
                condition = false;
            }
            count++;
        }
    }
}
Output:
Count: 1
Count: 2
Count: 3
Count: 4
Count: 5



6️⃣ Boolean Return Type in Methods
A method can return a boolean value.

✅ Example:
public class BooleanMethod {
    public static boolean isEven(int num) {
        return num % 2 == 0;
    }

    public static void main(String[] args) {
        System.out.println("Is 10 even? " + isEven(10)); // true
        System.out.println("Is 7 even? " + isEven(7));   // false
    }
}
Output:
Is 10 even? true
Is 7 even? false



7️⃣ Boolean Wrapper Class (Boolean)
Java provides a wrapper class Boolean for the boolean primitive.

✅ Example:
public class BooleanWrapper {
    public static void main(String[] args) {
        Boolean boolObj = Boolean.valueOf(true);
        System.out.println("Boolean object: " + boolObj);
    }
}