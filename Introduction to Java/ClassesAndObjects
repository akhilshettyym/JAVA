📌 Classes & Objects in Java
Java is an object-oriented programming language, meaning it revolves around classes and objects.

📝 What is a Class?
A class is like a blueprint for creating objects. It defines attributes (variables) and methods (functions).

📝 What is an Object?
An object is a real-world entity created from a class. It has its own values and can perform actions.

✅ Example: Creating a Class & Object 
// Defining a Class
class Car {
    String brand = "Toyota";  // Attribute
    int speed = 120;  // Attribute

    void displayCar() {  // Method
        System.out.println("Brand: " + brand);
        System.out.println("Speed: " + speed + " km/h");
    }
}

public class Main {
    public static void main(String[] args) {
        Car myCar = new Car();  // Creating an object
        myCar.displayCar();  // Calling a method
    }
}
Output: 
Brand: Toyota
Speed: 120 km/h
📌 Class Attributes (Instance Variables)
Class attributes are variables inside a class that define the properties of an object.

✅ Example: 
class Student {
    String name = "Akhil";
    int age = 22;
}

public class Main {
    public static void main(String[] args) {
        Student s1 = new Student();
        System.out.println(s1.name);  // Output: Akhil
        System.out.println(s1.age);   // Output: 22
    }
}
🔹 Each object has its own values for attributes!

📌 Class Methods
A method is a function inside a class that performs actions.

✅ Example: 
class Person {
    String name = "John";

    void greet() {  // Method
        System.out.println("Hello, my name is " + name);
    }
}

public class Main {
    public static void main(String[] args) {
        Person p1 = new Person();
        p1.greet();  // Calling method
    }
}
Output: 
Hello, my name is John
🔹 Methods help in reusing code and organizing functionality.

📌 Constructors
A constructor is a special method that runs when an object is created.

✅ Example: 
class Dog {
    String breed;

    // Constructor
    Dog(String b) {
        breed = b;
        System.out.println("Dog created: " + breed);
    }
}

public class Main {
    public static void main(String[] args) {
        Dog d1 = new Dog("Labrador");  // Constructor is called automatically
    }
}
Output: 
Dog created: Labrador
🔹 Why use constructors?
✔️ Automatically assigns values when objects are created.

📌 Method Parameters
Methods can take inputs (parameters) to perform actions dynamically.

✅ Example: 
class MathOperations {
    void addNumbers(int a, int b) {  // Method with parameters
        System.out.println("Sum: " + (a + b));
    }
}

public class Main {
    public static void main(String[] args) {
        MathOperations math = new MathOperations();
        math.addNumbers(10, 20);  // Passing values
    }
}
Output: 
Sum: 30
🔹 Parameters make methods flexible by allowing different inputs.