1️⃣ If-Else Statement
The if-else statement is used to execute a block of code based on a condition.

Syntax:
if (condition) {
    // Code runs if condition is true
} else {
    // Code runs if condition is false
}
✅ Example:
public class IfElseExample {
    public static void main(String[] args) {
        int age = 20;

        if (age >= 18) {
            System.out.println("You are eligible to vote.");
        } else {
            System.out.println("You are not eligible to vote.");
        }
    }
}
Output:
You are eligible to vote.
➡️ Else-If Ladder
If multiple conditions need to be checked, use else if.

int num = 0;
if (num > 0) {
    System.out.println("Positive number");
} else if (num < 0) {
    System.out.println("Negative number");
} else {
    System.out.println("Zero");
}

Output:
Zero


2️⃣ Switch Statement
The switch statement is used when you have multiple cases for a single variable.

Syntax: 
switch(expression) {
    case value1:
        // Code for case 1
        break;
    case value2:
        // Code for case 2
        break;
    default:
        // Default code if no case matches
}
✅ Example: 
public class SwitchExample {
    public static void main(String[] args) {
        int day = 3;

        switch (day) {
            case 1:
                System.out.println("Monday");
                break;
            case 2:
                System.out.println("Tuesday");
                break;
            case 3:
                System.out.println("Wednesday");
                break;
            default:
                System.out.println("Invalid day");
        }
    }
}
Output:  
Wednesday


3️⃣ While Loop
The while loop executes as long as the condition is true.

Syntax: 
while (condition) {
    // Code block
}
✅ Example: 
public class WhileLoopExample {
    public static void main(String[] args) {
        int i = 1;

        while (i <= 5) {
            System.out.println("Count: " + i);
            i++;  // Increment
        }
    }
}
Output: 
Count: 1
Count: 2
Count: 3
Count: 4
Count: 5


4️⃣ For Loop
The for loop is used when the number of iterations is known.

Syntax: 
for (initialization; condition; update) {
    // Code block
}
✅ Example: 
public class ForLoopExample {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            System.out.println("Iteration: " + i);
        }
    }
}
Output: 
Iteration: 1
Iteration: 2
Iteration: 3
Iteration: 4
Iteration: 5
➡️ Enhanced For Loop (for-each)
Used for iterating over arrays or collections.
 
int[] numbers = {10, 20, 30, 40};

for (int num : numbers) {
    System.out.println(num);
}
Output: 
10
20
30
40


5️⃣ Break and Continue
Break Statement
The break statement exits the loop completely.

✅ Example: 
public class BreakExample {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            if (i == 3) {
                break; // Exit loop when i = 3
            }
            System.out.println(i);
        }
    }
}
Output: 
1
2
Continue Statement
The continue statement skips the current iteration and moves to the next one.

✅ Example: 
public class ContinueExample {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            if (i == 3) {
                continue; // Skip when i = 3
            }
            System.out.println(i);
        }
    }
}
Output: 
1
2
4
5