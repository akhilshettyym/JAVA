Data types in Java define the type of data that a variable can store. Java has two main categories of data types:

Primitive Data Types (Built-in types)
Non-Primitive Data Types (Reference types like objects, arrays, etc.)

Data Type	        Size	
byte	            1 byte (8 bits)	
short	            2 bytes (16 bits)	
int	                4 bytes (32 bits)		
long	            8 bytes (64 bits)	
float	            4 bytes (32 bits)	
double	            8 bytes (64 bits)	
char	            2 bytes (16 bits)	
boolean	            1 bit (true/false)


2. Non-Primitive Data Types
Non-primitive data types store multiple values and have methods associated with them. Examples include:

Strings (String)
Arrays (int[])
Classes (User-defined types)
Interfaces (Abstract data types)

A String is a sequence of characters - Unlike char, a String can store multiple characters.
Arrays - Arrays store multiple values of the same data type.
-------------------------------------------------------------------------------------------------------------
Class (User-Defined Data Type) - A class is a blueprint or a template for objects.
class Car {
    String brand = "Toyota"; // String type variable
    int speed = 120;         // int type variable
}
Car myCar = new Car();       // new Car(); allocates memory

Instance variables - are variables declared inside a class but outside any method.
Each object created from this class will have its own copy of these variables.

An object is an instance of a class.
Each object has its own copy of the class’s properties.
-------------------------------------------------------------------------------------------------------------
3. Type Conversion Between Data Types
3.1 Implicit Type Casting (Widening) - Smaller data type → Larger data type (Automatic)
int num = 10;
double doubleNum = num; // int → double (widening)

Explicit Type Casting (Narrowing) - Larger data type → Smaller data type (Requires manual conversion)
double d = 10.99;
int i = (int) d; // double → int (narrowing)
-------------------------------------------------------------------------------------------------------------
                                                Constructor !!!
-------------------------------------------------------------------------------------------------------------
Constructor is a special method that runs automatically when an object of Car is created.
class Car {
    String brand; // Instance variable for car brand
    int speed;    // Instance variable for car speed

    // Constructor
    Car(String b, int s) { 
        brand = b;  // Assigning value of parameter 'b' to instance variable 'brand'
        speed = s;  // Assigning value of parameter 's' to instance variable 'speed'
    }
}

Car myCar = new Car("Honda", 150); // Object creation using constructor.
-------------------------------------------------------------------------------------------------------------