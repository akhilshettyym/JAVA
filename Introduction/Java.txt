1. Introduction to Java
Brief Overview
Java is a high-level, object-oriented programming language developed by James Gosling at Sun Microsystems (now owned by Oracle) in 1995. It is platform-independent due to the Java Virtual Machine (JVM), which allows code to run on any operating system.

Key Features of Java
Platform Independent – Uses JVM to run anywhere (Write Once, Run Anywhere).
Object-Oriented – Supports Encapsulation, Inheritance, Polymorphism, and Abstraction.
Secure – Includes built-in security features and memory management.
Robust & Multithreaded – Manages memory automatically and supports multiple threads.
Widely Used – Used in web applications, mobile development (Android), and enterprise software.
Example Applications of Java
Android Development (via Android SDK)
Web Applications (Spring Boot, JSP)
Big Data & Machine Learning (Hadoop, Apache Spark)
Game Development (Minecraft is written in Java).


For classes we use Pascal convention and for functions we use camelCaseConvention

2. Java Syntax
Brief Overview
Java syntax is based on C/C++, but with simpler memory management and strict object-oriented rules.

// Java Program Example
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, Java!"); // Prints output
    }
}
Detailed Breakdown
public class HelloWorld – Declares a class named HelloWorld.
public static void main(String[] args) – The main method where execution starts.
System.out.println("Hello, Java!"); – Prints text to the console.

3. Comments in Java
Brief Overview
Comments in Java are used to add explanatory notes that are ignored by the compiler.

Types of Comments
1. Single-line Comment (//)
// This is a single-line comment
System.out.println("Hello, Java!");


2. Multi-line Comment (/* ... */)
/* 
This is a multi-line comment
It spans multiple lines
*/

System.out.println("Hello, Java!");
3. Documentation Comment (/** ... */)
Used for generating documentation using Javadoc.


public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, Java!");
    }
}

4. Variables in Java
Brief Overview
Variables are named memory locations used to store data. In Java, all variables must be declared before use.

Declaring Variables
int age = 25;  // Declaring an integer variable
String name = "Akhil"; // Declaring a string variable.

Data Types in Java
Brief Overview
Java has two categories of data types: Primitive and Non-Primitive.

Primitive Data Types:
byte	1 byte	0	        byte b = 127;
short	2 bytes	0	        short s = 32000;
int	    4 bytes	0	        int x = 100;
long	8 bytes	0L	        long big = 100000L;
float	4 bytes	0.0f	    float pi = 3.14f;
double	8 bytes	0.0d	    double d = 99.99;
char	2 bytes	'\u0000'	char c = 'A';
boolean	1 byte	false	    boolean isJavaFun = true;

Non-Primitive Data Types :
Strings: String name = "Java";
Arrays: int[] numbers = {1, 2, 3, 4};
Objects: Person p = new Person();

